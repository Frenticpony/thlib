/* -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	thlib Spell Background Library (spellbg_lib.dnh)
	
	Author: Frenticpony
	Version -
	
	to do: spell BG animation library, more bosses
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= */

task SpellCardBGAki(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_aki01);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_aki00);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 512, 512);
	ObjRender_SetScaleXYZ(objBG2,1,1,1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 1024, 1024 + bgY1);
			//ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			bgY1 += 0.75;
			//bgX2 -= 0.5;
			//bgY2 -= 0.5;
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGHina(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 200;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_hina00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
	ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_hina01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0 + 128, 0 + 128, 4096 + 128, 4096 + 128);
	ObjSprite2D_SetDestCenter(objBG2);
	ObjRender_SetScaleXYZ(objBG2, 2, 2, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			//ObjSprite2D_SetSourceRect(objBG1, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			ObjRender_SetPosition(objBG2, CenX + 50*cos(red), CenY + 50*sin(red), 0);
			ObjRender_SetAngleZ(objBG2, bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			//bgX2 += 0.75;
			//bgY2 -= 0.75;
			
			bgangle += 1.75;
			red -= 1;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGNitori(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_nitori00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_nitori01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 512, 512);
	ObjRender_SetScaleXYZ(objBG2, 2, 2, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjRender_SetColor(objBG2, 100, 200, red);
			
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX1, 0 + bgY1, 1024 + bgX1, 1024 + bgY1);
			//ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			bgX1 += 0.25;
			bgY1 += 0.75;
			
			if(red < 255 && colorFlag == 0)
			{
				red += 1.1;
			}
			else if(red >= 255 && colorFlag == 0)
			{
				colorFlag = 1;
			}
			else if(red > 100 && colorFlag == 1)
			{
				red -= 1.1;
			}
			else if(red <= 100 && colorFlag == 1)
			{
				colorFlag = 0;
			}
			
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGAya(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
		
		let r = 20;
		let g = 255;
		let b = 20;
			
		let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG2, img_cdbg_aya01);		//Set BG2 texture
		Obj_SetRenderPriorityI(objBG2,23);
		ObjRender_SetPosition(objBG2, 128, 0, 0);
		ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256*4, 256*4);
		ObjSprite2D_SetDestCenter(objBG2);
		ObjRender_SetScaleXYZ(objBG2,1,1,1);
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_aya00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,22);
		ObjRender_SetPosition(objBG1, 0, 0, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
		ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
		ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
		task ColorPulseLoop()
		{
			while(!Obj_IsDeleted(FPEnemy))
			{
				ColorPulseRed;
				//ColorPulseGreen;
				ColorPulseBlue;
			}
		}
		
		function ColorPulseRed
		{
			loop(120)
			{
				r += 1.5;
				g -= 1;
				b += 1.5;
				wait(1);
			}
		}
		
		function ColorPulseGreen
		{
			loop(30)
			{
				r -= 6;
				b -= 6;
				wait(1);
			}
			loop(30)
			{
				r += 6;
				b += 6;
				wait(1);
			}
		}
		
		function ColorPulseBlue
		{
			loop(120)
			{
				r -= 1.5;
				g += 1;
				b -= 1.5;
				wait(1);
			}
		}
		
		ColorPulseLoop();
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			
			if(isBossSpell)
			{
				ObjSprite2D_SetSourceRect(objBG2, 0 + bgX, 0 + bgY, 256*4 + bgX, 256*4 + bgY);
				//ObjRender_SetAngleZ(objBG2, bgangle);
				bgY += 0.5;
				bgX += 0.25;
				if(alpha < 255)
				{
					alpha += 4;
				}
				ObjRender_SetColor(objBG2, r, g, b);
			}
			else
			{
				alpha = 0;
			}
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha/1.5);
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}

task SpellCardBGSanae(FPEnemy)
{
	let ang = 0;
	let alpha = 0;

	let bgY = 0;
	let bgX = 0;
	let bgangle = 0;
	
	let hue = 0;
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_sanae01);		//Set BG2 texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 128, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_RGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256*4, 256*4);
	ObjSprite2D_SetDestCenter(objBG2);
	ObjRender_SetScaleXYZ(objBG2,1,1,1);
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_sanae00);		//Set BG1 texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
	ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		//ObjRender_SetAlpha(objBG2, alpha/1.5);
		if(isBossSpell)
		{
			ObjSprite2D_SetSourceRect(objBG2, 0, 0 + bgY, 256*4, 256*4 + bgY);
			//ObjRender_SetAngleZ(objBG2, bgangle);
			bgY += 0.75;
			if(alpha < 255)
			{
				alpha += 4;
			}
			hue++;
			//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGKanako(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let colorFlag = 0;
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_kanako00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,23);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_kanako01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 512, 512);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		ObjRender_SetColorHSV(objBG2, hue, 255, 255);
		hue += 0.75;
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG2, 100, 200, red);
			
			ObjSprite2D_SetSourceRect(objBG2, 0, 0 + bgY1, 512, 512 + bgY1);
			//ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			
			bgY1 += 0.35;
			
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGSuwako(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let colorFlag = 0;
	let hue = 255;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_suwako00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_suwako01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 512, 512);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		ObjRender_SetColorHSV(objBG2, hue, 255, 255);
		hue -= 1.25;
		if(hue < 0)
		{
			hue += 360;
		}
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG2, 100, 200, red);
			
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX1, 0, 512 + bgX1, 512);
			//ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			
			bgX1 -= 0.75;
			
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}


task SpellCardBGKisumeYamame(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_th11_cdbg_kisumeyamame00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_th11_cdbg_kisumeyamame01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 1024, 1024);
	ObjRender_SetScaleXYZ(objBG2,1,1,1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 1024, 1024 + bgY1);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			bgY1 += 0.5;
			bgX2 -= 0.5;
			bgY2 -= 0.5;
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGParsee(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_th11_cdbg_parsee00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1, 0, 0, 256, 256);
	ObjSprite2D_SetDestRect(objBG1, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG1, 2.31, 2.31, 2.31);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_th11_cdbg_parsee01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
	ObjSprite2D_SetDestRect(objBG2, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG2, 2.31, 2.31, 2.31);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjRender_SetAngleZ(objBG1, bgangle);
			ObjRender_SetAngleZ(objBG2, bgangle2);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgangle += 0.5;
			bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
			
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGYuugi(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_th11_cdbg_yuugi00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG1, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG1, 2.32, 2.32, 2.32);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_th11_cdbg_yuugi01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG2,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			
			
			ObjRender_SetAngleZ(objBG1, bgangle);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgX2 += 1.5;
			bgY2 += 1.5;
			
			bgangle -= 0.25;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
			
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGSatori(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_satori00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_satori01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
	ObjSprite2D_SetDestRect(objBG2, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			ObjSprite2D_SetSourceRect(objBG1, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			ObjRender_SetAngleZ(objBG2, bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			if(red < 220 && colorFlag == 0)
			{
				red += 2;
			}
			else if(red == 220 && colorFlag == 0)
			{
				colorFlag = 1;
			}
			else if(red > 100 && colorFlag == 1)
			{
				red -= 2;
			}
			else if(red == 100 && colorFlag == 1)
			{
				colorFlag = 0;
			}
			
			bgX2 += 1;
			//bgY2 += 1.5;
			
			bgangle += 0.3;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGOrin(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_orin00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG1, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG1, 2.32, 2.32, 2.32);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_orin01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG2,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjRender_SetAngleZ(objBG1, bgangle);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			//bgX2 += 1.5;
			bgY2 += 1;
			
			bgangle += 0.25;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
			
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGUtsuho(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_utsuho01);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_utsuho00);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
	ObjSprite2D_SetDestRect(objBG2, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG2, 1.8, 1.8, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			ObjSprite2D_SetSourceRect(objBG1, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			ObjRender_SetAngleZ(objBG2, bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgX2 += 0.75;
			bgY2 -= 0.75;
			
			bgangle += 0.2;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGKoishi(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 200;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_koishi00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
	ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_koishi01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 4096, 4096);
	ObjSprite2D_SetDestCenter(objBG2);
	ObjRender_SetScaleXYZ(objBG2, 1.25, 1.25, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			//ObjSprite2D_SetSourceRect(objBG1, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			ObjRender_SetPosition(objBG2, CenX + 150*cos(red), CenY + 150*sin(red), 0);
			ObjRender_SetAngleZ(objBG2, bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			//bgX2 += 0.75;
			//bgY2 -= 0.75;
			
			bgangle -= 0.15;
			red += 0.075;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}


task SpellCardBGNazrin(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_nazrin00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_nazrin01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, -64, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 1024, 1024);
	ObjRender_SetScaleXYZ(objBG2,1,1,1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 1024, 1024 + bgY1);
			ObjSprite2D_SetSourceRect(objBG2, 0, 0 + bgY2, 1024, 1024 + bgY2);
			
			bgY1 += 0.4;
			//bgX2 -= 0.5;
			bgY2 += 1.5;
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGKogasa(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_kogasa00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_kogasa01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
	ObjSprite2D_SetDestRect(objBG2, -128, -128, 128, 128);
	ObjRender_SetScaleXYZ(objBG2, 2.35, 2.35, 1);
	
	let objBG3 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG3, img_cdbg_kogasa01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG3,23);
	ObjRender_SetPosition(objBG3, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG3, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG3, 0, 0, 256, 256);
	ObjSprite2D_SetDestRect(objBG3, 128, -128, -128, 128);
	ObjRender_SetScaleXYZ(objBG3, 2.35, 2.35, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		ObjRender_SetAlpha(objBG3, alpha);
		ObjRender_SetColor(objBG2, 150, 150, 150);
		ObjRender_SetColor(objBG3, 150, 150, 150);
		
		if(isBossSpell)
		{
			ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 1024, 1024 + bgY1);
			ObjRender_SetAngleZ(objBG2, bgangle);
			ObjRender_SetAngleZ(objBG3, -bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgY1 += 1;
			//bgY2 += 1.5;
			
			bgangle += 0.3;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
	Obj_Delete(objBG3);
}

task SpellCardBGIchirin(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_ichirin00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 0.875, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_ichirin01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, -64, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 1024, 1024);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		ObjRender_SetColor(objBG1, 150, 150, 150);
		ObjRender_SetColor(objBG2, 150, 150, 150);
		
		if(isBossSpell)
		{
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 1024, 1024 + bgY1);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			bgY1 -= 0.5;
			bgX2 += 0.75;
			bgY2 += 0.75;
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGMurasa(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_murasa00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1, 22);
	ObjRender_SetPosition(objBG1, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG1, -256, -256, 256, 256);
	ObjRender_SetScaleXYZ(objBG1, 1.5, 1.5, 1);
	
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_murasa01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2, 23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG2,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG2,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
		
	
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		ObjRender_SetColor(objBG1, 100, 100, 100);
		ObjRender_SetColor(objBG2, 100, 100, 100);
		
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			ObjRender_SetAngleZ(objBG1, bgangle);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgX2 += 0.75;
			bgY2 += 0.5;
			
			bgangle += 0.2;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGShou(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_shou00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1, 22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
	ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_shou01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2, 23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 1024, 1024);
	ObjSprite2D_SetDestRect(objBG2, 0, 0, 1024, 1024);
	ObjRender_SetScaleXYZ(objBG2,1,1,1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			//ObjSprite2D_SetSourceRect(objBG1, 0, 0, 1024, 1024);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			//bgY1 += 0.4;
			bgX2 += 0.8;
			bgY2 -= 0.8;
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGByakuren(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_byakuren00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
	ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
	ObjRender_SetScaleXYZ(objBG1, 2, 2, 1);
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_byakuren01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG2, -256, -256, 256, 256);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		//ObjRender_SetColor(objBG2, 150, 150, 150);
		
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 512, 512 + bgY1);
			ObjRender_SetAngleZ(objBG2, bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgY1 += 0.25;
			//bgY2 += 1.5;
			
			bgangle += 0.3;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}

task SpellCardBGNue(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	
	let hue = 0;
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_nue01);		//Set  overlay texture
	Obj_SetRenderPriorityI(objBG1,23);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
	
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_nue01);		//Set  overlay texture
	Obj_SetRenderPriorityI(objBG2,23);
	ObjRender_SetPosition(objBG2, 0, 0, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG2,1024, 0, 0, 1024);
	ObjRender_SetScaleXYZ(objBG2, 1, 1, 1);
		
	let objBG3 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG3, img_cdbg_nue00);		//Set back texture
	Obj_SetRenderPriorityI(objBG3,22);
	ObjRender_SetPosition(objBG3, 0, 0, 0);
	ObjRender_SetBlendType(objBG3, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG3, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG3, 0, 0, 512, 512);
	ObjRender_SetScaleXYZ(objBG3,1,1,1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha/1.5);
		ObjRender_SetAlpha(objBG2, alpha/1.5);
		ObjRender_SetAlpha(objBG3, alpha);
		//ObjRender_SetColorHSV(objBG2, hue, 255, alpha);
		
		if(isBossSpell)
		{
			ObjSprite2D_SetSourceRect(objBG1, 0 + bgX1, 0 + bgY1, 1024 + bgX1, 1024 + bgY1);
			ObjSprite2D_SetSourceRect(objBG2, 0 + bgX1, 0 + bgY1, 1024 + bgX1, 1024 + bgY1);
			//ObjSprite2D_SetSourceRect(objBG2, 0 + bgX2, 0 + bgY2, 1024 + bgX2, 1024 + bgY2);
			
			bgX1 -= 0.5;
			bgY1 += 0.5;
			
			//bgY2 -= 0.5;
			if(alpha < 255)
			{
				alpha += 4;
			}

		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
}


task SpellCardBGSeiran(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	let bgX1 = 0;
	let bgY1 = 0;
	
	let bgX2 = 0;
	let bgY2 = 0;
	
	let bgangle = 0;
	let bgangle2 = 0;
	
	let colorFlag = 0;
	let red = 130;
	
	
		
	let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG2, img_cdbg_seiran01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG2,22);
	ObjRender_SetPosition(objBG2, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objBG2, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG2, -256, -256, 256, 256);
	ObjRender_SetScaleXYZ(objBG2, 1.35, 1.35, 1);
	
	let objBG3 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG3, img_cdbg_seiran01);		//Set overlay texture
	Obj_SetRenderPriorityI(objBG3,22);
	ObjRender_SetPosition(objBG3, CenX, CenY, 0);
	ObjRender_SetBlendType(objBG3, BLEND_ADD_ARGB);
	ObjSprite2D_SetSourceRect(objBG3, 0, 0, 512, 512);
	ObjSprite2D_SetDestRect(objBG3, 256, -256, -256, 256);
	ObjRender_SetScaleXYZ(objBG3, 1.35, 1.35, 1);
	
	let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
	ObjPrim_SetTexture(objBG1, img_cdbg_seiran00);		//Set first texture
	Obj_SetRenderPriorityI(objBG1,22);
	ObjRender_SetPosition(objBG1, 0, 0, 0);
	ObjRender_SetBlendType(objBG1, BLEND_SUBTRACT);
	ObjSprite2D_SetSourceRect(objBG1,0,0,1024,1024);
	ObjSprite2D_SetDestRect(objBG1,0,0,1024,1024);
	ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
	
	while(!Obj_IsDeleted(FPEnemy))
	{
		ObjRender_SetAlpha(objBG1, alpha);
		ObjRender_SetAlpha(objBG2, alpha);
		ObjRender_SetAlpha(objBG3, alpha);
		ObjRender_SetColor(objBG2, 150, 150, 150);
		ObjRender_SetColor(objBG3, 150, 150, 150);
		
		if(isBossSpell)
		{
			//ObjRender_SetColor(objBG1, red, 120, 120);//130-210
			
			ObjSprite2D_SetSourceRect(objBG1, 0, 0 + bgY1, 1024, 1024 + bgY1);
			ObjRender_SetAngleZ(objBG2, bgangle);
			ObjRender_SetAngleZ(objBG3, -bgangle);
			
			if(alpha < 255)
			{
				alpha += 4;
			}
			
			bgY1 += 0.2;
			//bgY2 += 1.5;
			
			bgangle += 0.2;
			//bgangle2 -= 0.3;
			if(bgangle > 360)
			{
				bgangle -= 360;
			}
		}
		else
		{
			alpha = 0;
		}
		yield;
	}
	Obj_Delete(objBG1);
	Obj_Delete(objBG2);
	Obj_Delete(objBG3);
}



task SpellCardBGYukari(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
		
		let r = 20;
		let g = 255;
		let b = 20;
			
		let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG2, img_cdbg_yukari01);		//Set BG2 texture
		Obj_SetRenderPriorityI(objBG2,23);
		ObjRender_SetPosition(objBG2, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
		ObjSprite2D_SetDestCenter(objBG2);
		ObjRender_SetScaleXYZ(objBG2, 1.75, 1.75, 1.75);
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_yukari00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,22);
		ObjRender_SetPosition(objBG1, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG1, 0, 0, 256, 256);
		ObjSprite2D_SetDestCenter(objBG1);
		ObjRender_SetScaleXYZ(objBG1, 1.75, 1.75, 1.75);
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha);
			if(isBossSpell)
			{
				bgangle -= 0.5;
				ObjRender_SetAngleZ(objBG2, bgangle);
				if(alpha < 255)
				{
					alpha += 4;
				}
				ObjRender_SetColor(objBG2, r, g, b);
			}
			else
			{
				alpha = 0;
			}
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}

task SpellCardBGYuyuko(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x,y,offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
		
		
		let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG2, img_cdbg_yuyuko01);		//Set BG2 texture
		Obj_SetRenderPriorityI(objBG2,22);
		ObjRender_SetPosition(objBG2, 128, 0, 0);
		ObjSprite2D_SetSourceRect(objBG2,0,0,256*4,256*4);
		ObjSprite2D_SetDestRect(objBG2,0,0,256*4,256*4);
		ObjSprite2D_SetDestCenter(objBG2);
		ObjRender_SetScaleXYZ(objBG2,1,1,1);
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_yuyuko00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,23);
		ObjRender_SetPosition(objBG1, CenX, CenY, 0);
		//ObjRender_SetBlendType(objBG2, BLEND_INV_DESTRGB);
		ObjSprite2D_SetSourceRect(objBG1,0,0,384,448);
		ObjSprite2D_SetDestRect(objBG1,0,0,384,448);
		ObjSprite2D_SetDestCenter(objBG1);
		ObjRender_SetScaleXYZ(objBG1,1,1,1);
		while(!Obj_IsDeleted(FPEnemy))
		{
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha);
			if(isBossSpell)
			{
				ObjSprite2D_SetSourceRect(objBG2, 0, 0 + bgY, 256*4, 256*4 + bgY);
				bgY += 0.75;
				bgX += 1;
				bgangle += 0.25;
				alpha += 4;
			}
			else
			{
				alpha = 0;
			}
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}

task SpellCardBGSeiga(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
		
		let r = 255;
		let g = 255;
		let b = 255;
			
		let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG2, img_cdbg_seiga01);		//Set BG2 texture
		Obj_SetRenderPriorityI(objBG2,23);
		ObjRender_SetPosition(objBG2, 128, 0, 0);
		ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG2,0,0,256*4,256*4);
		ObjSprite2D_SetDestRect(objBG2,0,0,256*4,256*4);
		ObjSprite2D_SetDestCenter(objBG2);
		ObjRender_SetScaleXYZ(objBG2,1,1,1);
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_seiga00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,22);
		ObjRender_SetPosition(objBG1, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
		ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
		ObjSprite2D_SetDestCenter(objBG1);
		ObjRender_SetScaleXYZ(objBG1,1.2,1.2,1.2);
		
		task ColorPulseLoop()
		{
			while(!Obj_IsDeleted(FPEnemy))
			{
				ColorPulseRed;
				ColorPulseGreen;
				ColorPulseBlue;
			}
		}
		
		function ColorPulseRed
		{
			wait(120);
			loop(30)
			{
				g -= 6;
				b -= 6;
				wait(1);
			}
			wait(120);
			loop(30)
			{
				g += 6;
				b += 6;
				wait(1);
			}
		}
		
		function ColorPulseGreen
		{
			wait(120);
			loop(30)
			{
				r -= 6;
				b -= 6;
				wait(1);
			}
			wait(120);
			loop(30)
			{
				r += 6;
				b += 6;
				wait(1);
			}
		}
		
		function ColorPulseBlue
		{
			wait(120);
			loop(30)
			{
				r -= 6;
				g -= 6;
				wait(1);
			}
			wait(120);
			loop(30)
			{
				r += 6;
				g += 6;
				wait(1);
			}
		}
		
		ColorPulseLoop();
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha - 20);
			if(isBossSpell)
			{
				ObjRender_SetAngleZ(objBG1, bgangle);
				ObjSprite2D_SetSourceRect(objBG2, 0, 0 + bgY, 256*4, 256*4 + bgY);
				//ObjRender_SetAngleZ(objBG2, bgangle);
				bgY -= 2;
				bgX += 1;
				bgangle += 0.15;
				if(alpha < 255)
				{
					alpha += 4;
				}
			}
			else
			{
				alpha = 0;
			}
			ObjRender_SetColor(objBG2, r, g, b);
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}



task SpellCardBGMamizou(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
		
		let r = 255;
		let g = 255;
		let b = 255;
			
		let countVertex = 64;
		let listRadius = [];
		loop(countVertex)
		{
			listRadius = listRadius ~ [0];
		}
		let store = 0;
		let objBG2 = ObjPrim_Create(OBJ_PRIMITIVE_2D);
		ObjPrim_SetPrimitiveType(objBG2, PRIMITIVE_TRIANGLESTRIP);
		ObjPrim_SetVertexCount(objBG2, countVertex + 2);
		ObjRender_SetBlendType(objBG2, BLEND_SUBTRACT);
		ObjPrim_SetTexture(objBG2, img_cdbg_mamizou01);
		Obj_SetRenderPriorityI(objBG2, 23);
		
		loop((countVertex / 2) + 2)
		{
			let left = store * 4;
			ObjPrim_SetVertexUVT(objBG2, store, left, 0);
			ObjPrim_SetVertexUVT(objBG2, store + 1, left + 4, 256);	
			store += 2;
		}
		

		let maxRadius = 235;
		let alpha = 0;
		alpha = 230;
		let frame = 0;
		let angle = rand(0, 360);
		let indexVert = 0;
		
		let radiusA = 500;
		let radiusB = 0;
		let scale = 0;
		let scaleMod = 0.040;
		
		loop((countVertex / 2) + 2)
		{
			let vx1 = radiusA * cos(angle);
			let vy1 = radiusA * sin(angle);
			ObjPrim_SetVertexPosition(objBG2, indexVert, vx1, vy1, 0);
			ObjPrim_SetVertexColor(objBG2, indexVert, 250, 250, 250);
			ObjPrim_SetVertexAlpha(objBG2, indexVert, 255);

			let vx2 = radiusB * cos(angle);
			let vy2 = radiusB * sin(angle);
			ObjPrim_SetVertexPosition(objBG2, indexVert + 1, vx2, vy2, 0);
			ObjPrim_SetVertexColor(objBG2, indexVert + 1, 0, 0, 0);
			ObjPrim_SetVertexAlpha(objBG2, indexVert + 1, 0);

			angle += (360/(countVertex/2));
			indexVert += 2;
		}

		function UpdateVertex()
		{
			//ObjRender_SetColor(objBG2, alpha, alpha, alpha);
			ObjRender_SetPosition(objBG2, 274, 104, 0);
			
		}
		ObjRender_SetAngleZ(objBG2, 90);
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_mamizou00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,22);
		ObjRender_SetPosition(objBG1, 0, 0, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG1,0,0,512,512);
		ObjSprite2D_SetDestRect(objBG1,0,0,512,512);
		ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			UpdateVertex();
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha/1.5);
			if(isBossSpell)
			{
				if(alpha < 255)
				{
					alpha += 4;
				}
				
				ascent(i in 0..countVertex)
				{
					let left = i * 64;
					let indexVert = i * 2;
					ObjPrim_SetVertexUVT(objBG2, indexVert, 0 + 24*i, 0 + frame);
					ObjPrim_SetVertexUVT(objBG2, indexVert + 1, 24 + 24*i, 256 + frame);	
				}
				frame += 2.2;
				
			}
			else
			{
				alpha = 0;
			}
			
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}

task SpellCardBGSukuna(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgY2 = 0;
		let bgX = 0;
		let bgX2 = 0;
		let bgangle = 0;
		
		let r = 255;
		let g = 255;
		let b = 255;
			
		let countVertex = 512;
		let listRadius = [];
		loop(countVertex)
		{
			listRadius = listRadius ~ [0];
		}
		let store = 0;
		let objBG2 = ObjPrim_Create(OBJ_PRIMITIVE_2D);
		ObjPrim_SetPrimitiveType(objBG2, PRIMITIVE_TRIANGLESTRIP);
		ObjPrim_SetVertexCount(objBG2, countVertex + 2);
		ObjRender_SetBlendType(objBG2, BLEND_MULTIPLY);
		ObjPrim_SetTexture(objBG2, img_cdbg_sukuna01);
		Obj_SetRenderPriorityI(objBG2, 23);
		ObjRender_SetAngleZ(objBG2, 270);
		
		loop((countVertex / 2) + 2)
		{
			let left = store * 4;
			ObjPrim_SetVertexUVT(objBG2, store, left, 0);
			ObjPrim_SetVertexUVT(objBG2, store + 1, left + 4, 256);
			store += 2;
		}

		let maxRadius = 235;
		let alpha = 230;
		let rColor = 0;
		let rColor2 = 0;
		let frame = 0;
		let angle = 0;
		let indexVert = 0;
		
		let radiusA = 500;
		let radiusB = 0;
		let scale = 0;
		let scaleMod = 0.040;
		
		loop((countVertex / 2) + 2)
		{
			let vx1 = radiusA * cos(angle);
			let vy1 = radiusA * sin(angle);
			ObjPrim_SetVertexPosition(objBG2, indexVert, vx1, vy1, 0);
			ObjPrim_SetVertexAlpha(objBG2, indexVert, 255);
			
			let vx2 = radiusB * cos(angle);
			let vy2 = radiusB * sin(angle);
			ObjPrim_SetVertexPosition(objBG2, indexVert + 1, vx2, vy2, 0);
			ObjPrim_SetVertexAlpha(objBG2, indexVert + 1, 0);
			
			angle += (360/(countVertex/2));
			indexVert += 2;
		}

		function UpdateVertex()
		{
			ObjRender_SetPosition(objBG2, CenX, 120, 0);
			
		}
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_sukuna02);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,24);
		ObjRender_SetPosition(objBG1, 0, 0, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ADD_RGB);
		ObjSprite2D_SetSourceRect(objBG1,0,0,256*4,256*4);
		ObjSprite2D_SetDestRect(objBG1,0,0,256*4,256*4);
		ObjRender_SetScaleXYZ(objBG1, 1, 1, 1);
		
		let objBG3 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG3, img_cdbg_sukuna00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG3,22);
		ObjRender_SetPosition(objBG3, 0, 0, 0);
		ObjRender_SetBlendType(objBG3, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG3,0,0,256*4,256*4);
		ObjSprite2D_SetDestRect(objBG3,0,0,256*4,256*4);
		ObjRender_SetScaleXYZ(objBG3, 1, 1, 1);
		
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			UpdateVertex();
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha);
			ObjRender_SetAlpha(objBG3, alpha);
			ObjRender_SetColor(objBG1, rColor, rColor, rColor);
			ObjRender_SetColor(objBG2, rColor2, rColor2, rColor2);
			if(isBossSpell)
			{
			
				ObjSprite2D_SetSourceRect(objBG1, 0 + bgX, 0 + bgY, 256*4 + bgX, 256*4 + bgY);
				ObjSprite2D_SetSourceRect(objBG3, 0 + bgX2, 0 + bgY2, 256*4 + bgX2, 256*4 + bgY2);
				bgY -= 0.05;
				bgX += 0.1;
				
				bgY2 -= 0.1;
				bgX2 -= 0.1;
				
				if(alpha < 255)
				{
					alpha += 4;
					rColor2 += 4;
				}
				
				if(rColor < 35)
				{
					rColor += 0.5;
				}
				
				ascent(i in 0..countVertex)
				{
					let left = i * 64;
					let indexVert = i * 2;
					ObjPrim_SetVertexUVT(objBG2, indexVert, 0 + 2*i, 0 + frame);
					ObjPrim_SetVertexUVT(objBG2, indexVert + 1, 2 + 2*i, 512 + frame);	
				}
				frame += 0.5;
				ObjRender_SetBlendType(objBG2, BLEND_MULTIPLY);
			}
			else
			{
				alpha = 0;
				rColor = 0;
				rColor2 = 0;
				ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
			}
			
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
		Obj_Delete(objBG3);
	}
	Run(CenX, CenY, 0);
}

task SpellCardBGReimu(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
			
		let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG2, img_cdbg_reimu01);		//Set BG2 texture
		Obj_SetRenderPriorityI(objBG2,23);
		ObjRender_SetPosition(objBG2, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG2, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
		ObjSprite2D_SetDestCenter(objBG2);
		ObjRender_SetScaleXYZ(objBG2, 2.28, 2.28, 2.28);
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_reimu00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,22);
		ObjRender_SetPosition(objBG1, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG1, 0, 0, 256, 256);
		ObjSprite2D_SetDestCenter(objBG1);
		ObjRender_SetScaleXYZ(objBG1, 1.75, 2, 1.75);
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetAlpha(objBG2, alpha);
			if(isBossSpell)
			{
				bgangle -= 0.4;
				ObjRender_SetAngleZ(objBG2, bgangle);
				if(alpha < 255)
				{
					alpha += 4;
				}
			}
			else
			{
				alpha = 0;
			}
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}

task SpellCardBGMeiling(FPEnemy)
{
	let ang = 0;
	let alpha = 0;
	
	task Run(x, y, offset)
	{
		let bgY = 0;
		let bgX = 0;
		let bgangle = 0;
			
		let objBG2 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG2, img_cdbg_meiling01);		//Set BG2 texture
		Obj_SetRenderPriorityI(objBG2,23);
		ObjRender_SetPosition(objBG2, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG2, BLEND_ADD_RGB);
		ObjSprite2D_SetSourceRect(objBG2, 0, 0, 256, 256);
		ObjSprite2D_SetDestCenter(objBG2);
		ObjRender_SetScaleXYZ(objBG2, 2.28, 2.28, 2.28);
		ObjRender_SetColor(objBG2, alpha, alpha, alpha);
		
		let objBG1 = ObjPrim_Create(OBJ_SPRITE_2D);
		ObjPrim_SetTexture(objBG1, img_cdbg_meiling00);		//Set BG1 texture
		Obj_SetRenderPriorityI(objBG1,22);
		ObjRender_SetPosition(objBG1, CenX, CenY, 0);
		ObjRender_SetBlendType(objBG1, BLEND_ALPHA);
		ObjSprite2D_SetSourceRect(objBG1, 0, 0, 256, 256);
		ObjSprite2D_SetDestCenter(objBG1);
		ObjRender_SetScaleXYZ(objBG1, 1.75, 2, 1.75);
		ObjRender_SetAlpha(objBG1, alpha);
		
		while(!Obj_IsDeleted(FPEnemy))
		{
			ObjRender_SetAlpha(objBG1, alpha);
			ObjRender_SetColor(objBG2, alpha, alpha, alpha);
			if(isBossSpell)
			{
				bgangle -= 0.4;
				ObjRender_SetAngleZ(objBG2, bgangle);
				if(alpha < 255)
				{
					alpha += 4;
				}
			}
			else
			{
				alpha = 0;
			}
			yield;
		}
		Obj_Delete(objBG1);
		Obj_Delete(objBG2);
	}
	Run(CenX, CenY, 0);
}


//task SpellCardBGByakuren(FPEnemy)