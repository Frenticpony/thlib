/* -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
	thlib Sound Effect Library (soundeffect_lib.dnh)
	
	Author: Frenticpony
	Version -
	
	to do (A LOT): replace all samples with raw rips, individual sound volume control and global volume
	
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= */

let SE_ALERT = GetCurrentScriptDirectory ~ "../../se/se_alert.wav";
let SE_BONUS3 = GetCurrentScriptDirectory ~ "../../se/se_bonus3.wav";
let SE_CAT00 = GetCurrentScriptDirectory ~ "../../se/se_cat00.wav";
let SE_CH02 = GetCurrentScriptDirectory ~ "../../se/se_ch02.wav";
let SE_ETBREAK = GetCurrentScriptDirectory ~ "../../se/se_etbreak.wav";
let SE_SPARK = GetCurrentScriptDirectory ~ "../../se/se_nep00.wav";
let SE_ENEP00 = GetCurrentScriptDirectory ~ "../../se/se_enep00.wav";
let SE_ENEP01 = GetCurrentScriptDirectory ~ "../../se/se_enep01.wav";
let SE_ENEP02 = GetCurrentScriptDirectory ~ "../../se/se_enep02.wav";
let SE_EXTEND = GetCurrentScriptDirectory ~ "../../se/se_extend.wav";
let SE_TAN00 = GetCurrentScriptDirectory ~ "../../se/se_tan00.wav";
let SE_KIRA00 = GetCurrentScriptDirectory ~ "../../se/se_kira00.wav";
let SE_LGODS4 = GetCurrentScriptDirectory ~ "../../se/se_lgods4.wav";
let SE_LASER00 = GetCurrentScriptDirectory ~ "../../se/se_lazer00.wav";

let SE_HIT00 = GetCurrentScriptDirectory ~ "../../se/se_damage00.wav";
let SE_HIT01 = GetCurrentScriptDirectory ~ "../../se/se_damage01.wav";
let SE_CARDGET = GetCurrentScriptDirectory ~ "../../se/se_cardget.wav";
let SE_TIMEOUT = GetCurrentScriptDirectory ~ "../../se/se_timeout.wav";
let SE_TIMEOUT2 = GetCurrentScriptDirectory ~ "../../se/se_timeout2.wav";

let SE_SELECT00 = GetCurrentScriptDirectory ~ "../../se/se_select00.wav";
let SE_OK00 = GetCurrentScriptDirectory ~ "../../se/se_ok00.wav";
let SE_CANCEL00 = GetCurrentScriptDirectory ~ "../../se/se_cancel00.wav";
let SE_BOON01 = GetCurrentScriptDirectory ~ "../../se/se_boon01.wav";
let SE_PAUSE = GetCurrentScriptDirectory ~ "../../se/se_pause.wav";

task LoadAllSE()
{
	LoadSound(SE_ALERT);
	LoadSound(SE_BONUS3);
	LoadSound(SE_CAT00);
	LoadSound(SE_CH02);
	LoadSound(SE_ETBREAK);
	LoadSound(SE_SPARK);
	LoadSound(SE_ENEP00);
	LoadSound(SE_ENEP01);
	LoadSound(SE_ENEP02);
	LoadSound(SE_EXTEND);
	LoadSound(SE_TAN00);
	LoadSound(SE_KIRA00);
	LoadSound(SE_LGODS4);
	LoadSound(SE_LASER00);
	LoadSound(SE_HIT00);
	LoadSound(SE_HIT01);
	LoadSound(SE_CARDGET);
	LoadSound(SE_TIMEOUT);
	LoadSound(SE_TIMEOUT2);
	LoadSound(SE_SELECT00);
	LoadSound(SE_OK00);
	LoadSound(SE_CANCEL00);
	LoadSound(SE_BOON01);
	LoadSound(SE_PAUSE);
}

let allSEArray = 
[
	"se_alert",
	"se_big",
	"se_bonus",
	"se_bonus2",
	"se_bonus4",
	"se_boon00",
	"se_boon01",
	"se_bun",
	"se_cancel00",
	"se_cardget",
	"se_cat00",
	"se_ch00",
	"se_ch01",
	"se_ch02",
	"se_ch03",
	"se_cong",
	"se_damage00",
	"se_damage01",
	"se_don00",
	"se_enep00",
	"se_enep01",
	"se_enep02",
	"se_etbreak",
	"se_extend",
	"se_extend2",
	"se_fault",
	"se_focus",
	"se_goast1",
	"se_goast2",
	"se_graze",
	"se_gun00",
	"se_heal",
	"se_invalid",
	"se_item00",
	"se_kira00",
	"se_kira01",
	"se_kira02",
	"se_lazer00",
	"se_lazer01",
	"se_lazer02",
	"se_lgods1",
	"se_lgods2",
	"se_lgods3",
	"se_lgods4",
	"se_lgodsget",
	"se_msl",
	"se_msl2",
	"se_msl3",
	"se_nep00",
	"se_nodamage",
	"se_noise",
	"se_notice",
	"se_ok00",
	"se_pause",
	"se_pin00",
	"se_pin01",
	"se_pldead00",
	"se_pldead01",
	"se_plst00",
	"se_power0",
	"se_power1",
	"se_powerup",
	"se_poyon",
	"se_select00",
	"se_shutter",
	"se_slash",
	"se_tan00",
	"se_tan01",
	"se_tan02",
	"se_tan03",
	"se_timeout",
	"se_timeout2",
	"se_trophy",
	"se_warp_l",
	"se_warp_n",
	"se_warp_r",
	"se_wolf",
	"se_bonus3",
	"se_geiger00",
	"se_geiger01",
	"se_geiger02",
	"se_geiger03",
	"se_geiger04",
	"se_geiger05",
];

let se_alert    = 0;
let se_big      = 1;
let se_bonus    = 2;
let se_bonus2   = 3;
let se_bonus4   = 4;
let se_boon00   = 5;
let se_boon01   = 6;
let se_bun      = 7;
let se_cancel00 = 8;
let se_cardget  = 9;
let se_cat00    = 10;
let se_ch00     = 11;
let se_ch01     = 12;
let se_ch02     = 13;
let se_ch03     = 14;
let se_cong     = 15;
let se_damage00 = 16;
let se_damage01 = 17;
let se_don00    = 18;
let se_enep00   = 19;
let se_enep01   = 20;
let se_enep02   = 21;
let se_etbreak  = 22;
let se_extend   = 23;
let se_extend2  = 24;
let se_fault    = 25;
let se_focus    = 26;
let se_goast1   = 27;
let se_goast2   = 28;
let se_graze    = 29;
let se_gun00    = 30;
let se_heal     = 31;
let se_invalid  = 32;
let se_item00   = 33;
let se_kira00   = 34;
let se_kira01   = 35;
let se_kira02   = 36;
let se_laser00  = 37;
let se_laser01  = 38;
let se_laser02  = 39;
let se_lgods1   = 40;
let se_lgods2   = 41;
let se_lgods3   = 42;
let se_lgods4   = 43;
let se_lgodsget = 44;
let se_msl      = 45;
let se_msl2     = 46;
let se_msl3     = 47;
let se_nep00    = 48;
let se_nodamage = 49;
let se_noise    = 50;
let se_notice   = 51;
let se_ok00     = 52;
let se_pause    = 53;
let se_pin00    = 54;
let se_pin01    = 55;
let se_pldead00 = 56;
let se_pldead01 = 57;
let se_plst00   = 58;
let se_power0   = 59;
let se_power1   = 60;
let se_powerup  = 61;
let se_poyon    = 62;
let se_select00 = 63;
let se_shutter  = 64;
let se_slash    = 65;
let se_tan00    = 66;
let se_tan01    = 67;
let se_tan02    = 68;
let se_tan03    = 69;
let se_timeout  = 70;
let se_timeout2 = 71;
let se_trophy   = 72;
let se_warp_l   = 73;
let se_warp_n   = 74;
let se_warp_r   = 75;
let se_wolf     = 76;
let se_bonus3   = 77;
let se_geiger00   = 78;
let se_geiger01   = 79;
let se_geiger02   = 80;
let se_geiger03   = 81;
let se_geiger04   = 82;
let se_geiger05   = 83;

let seArray = [];

function FP_LoadAllSE()
{
    //let vol = GetSoundVolume();
    ascent (i in 0 .. length(allSEArray))
    {
        //LoadSound(GetCurrentScriptDirectory ~ "../se/" ~ allSEArray[i] ~ ".wav");
        //let objSound = ObjSound_Create();
        //ObjSound_Load(objSound, GetCurrentScriptDirectory ~ "../se/" ~ allSEArray[i] ~ ".wav");
        //ObjSound_SetSoundDivision(objSound, SOUND_SE);
        //seArray = seArray ~ [objSound];
    }  
}

function FP_UpdateAllSEVolume()
{
	//ascent (i in 0 .. length(seArray))
    //{
		//ObjSound_SetVolumeRate(seArray[i], 90);
	//}
}

function FP_PlaySE(se)
{
	//ObjSound_SetPanRate(seArray[se], 0);
	//ObjSound_Play(seArray[se]);
}

function FP_PlayPanSE(x, se)
{
	//let xPos_percent = x / GetStgFrameWidth;
	//let panRateValue = 200 * xPos_percent;
	
	//ObjSound_SetPanRate(seArray[se], (panRateValue - 100) / 5);
	//ObjSound_Play(seArray[se]);
}

function rip()
{

}
	